1    /* region: Generated preamble */
2    /* Make sure the current directory is writable */
3    data _null_;
4        length rc 4;
5        %let tworkloc="%sysfunc(getoption(work))";
6        rc=dlgcdir(&tworkloc);
7    run;
NOTE: The current working directory is now 
      "/opt/sas/viya/config/var/tmp/compsrv/default/dc0baa93-8383-4c0c-900e-b05d12702e99/SAS_work1272000001DB_sas-compute-server-2a0
      8346d-f3b6-4a16-bfee-9589ad755ff4-102".
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
8    
9    /* Setup options */
10   title;
11   footnote;
12   options validvarname=any;
13   options validmemname=extend;
14   options dtreset date number;
15   options device=png;
16   
17   /* Setup macro variables */
18   %let syscc=0;
19   %let _clientapp = %nrquote(%nrstr(SAS Studio));
20   %let _clientappabbrev = %nrquote(%nrstr(Studio));
21   %let _clientappversion=2024.03;
22   %let _clientversion=;
23   %let _sasservername=&SYSHOSTNAME;
24   %let _sashostname=&SYSHOSTNAME;
25   %let _sasprogramfilehost=&SYSHOSTNAME;
26   %let _clientuserid = %nrquote(%nrstr(student));
27   %let _clientusername = %nrquote(%nrstr(Student));
28   %let clientmachine = %nrquote(%nrstr());
29   %let _clientmachine = %nrquote(%nrstr());
30   %let _clientmode = %nrquote(%nrstr(viya));
31   %let sasworklocation="%sysfunc(getoption(work))/";
32   filename _cwd &sasworklocation;
33   data _null_;
34       call symput('_sasworkingdir',pathname('_cwd'));
35   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
36   filename _cwd;
NOTE: Fileref _CWD has been deassigned.
37   %let _sasprogramfile = %nrquote(%nrstr(sascontent:/files/files/5554300e-83eb-4e3e-b533-206c075972d4));
38   %let _baseurl = %nrquote(%nrstr(https://server.demo.sas.com/SASStudio/));
39   %let _execenv = %nrquote(%nrstr(SASStudio));
40   %symdel _dataout_mime_type _dataout_name _dataout_url _dataout_table / nowarn;
41   %let _sasws_ = %bquote(%sysfunc(getoption(work)));
42   %let _saswstemp_ = %bquote(%sysfunc(getoption(work)));
43   
44   /* Detect SAS/Graph and setup graph options */
45   data _null_;
46       length rc $255;
47       call symput("graphinit","");
48       call symput("graphterm","");
49       rc=tslvl('sasxgopt','n');
50       _error_=0;
51       if (rc^=' ') then do;
52           call symput("graphinit","goptions reset=all gsfname=_gsfname;");
53           call symput("graphterm","goptions noaccessible;");
54       end;
55   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
56   data _null_;
57       length rc 4;
58       rc=sysprod("PRODNUM002");
59       if (rc^=1) then do;
60           call symput("graphinit","");
61           call symput("graphterm","");
62       end;
63   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
64   
65   /* Setup ODS destinations */
66   ods _all_ close;
67   %studio_results_directory;
68   filename _htmlout "&_results_prefix_..html";
69   filename _listout "&_results_prefix_..lst";
70   filename _gsfname temp;
71   filename _dataout "&_results_prefix_..dat";
72   ods autonavigate off;
73   ods graphics on;
74   ods html5 (id=web) METATEXT='http-equiv="Content-Security-Policy" content="default-src ''none''; style-src ''unsafe-inline'';
74 ! img-src data: ;"' device=png gpath="&_saswstemp_" path="&_saswstemp_" encoding=utf8 file=_htmlout (title='Results:Exemple
74 ! 4.sas') style=Illuminate options(bitmap_mode='inline' outline='on' svg_mode='inline' css_prefix=".ods_&SYS_COMPUTE_JOB_ID"
74 ! body_id="div_&SYS_COMPUTE_JOB_ID" );
NOTE: Writing HTML5(WEB) Body file: _HTMLOUT
75   ods listing file=_listout;
76   &graphinit;
77   %studio_initialize_custom_output;
78   /* endregion */
79   
80   /******************************************************************************
81   PROC SQL Explicit Passthrough
82   ******************************************************************************/
83   
84   /******************************************************************************
85   Step 1 - Select * from DBMS results
86   ******************************************************************************/
87   options sastrace=',,,d' sastraceloc=saslog nostsuffix;
88   
89   proc sql;
90   /* connect to Oracle as db  */
91   /*    (path="//server.demo.sas.com:1521/ORCL" user=student password="Metadata0"); */
92   connect using db;
93   select *
94   from connection to db
95   (select  to_char(order_date, 'D') Weekday
96   ,sum(Total_Sale) as Spent
97   from etdp.orders
98   where order_date between date'2017-01-01' and date'2017-12-30'
99   group by to_char(order_date, 'D')
100  order by to_char(order_date, 'D'))
101  ;
 
ORACLE_26: Prepared: on connection 1
select to_char(order_date, 'D') Weekday ,sum(Total_Sale) as Spent from etdp.orders where order_date between date'2017-01-01' and 
date'2017-12-30' group by to_char(order_date, 'D') order by to_char(order_date, 'D')
 
 
ORACLE_27: Executed: on connection 1
SELECT statement  ORACLE_26
 
102  disconnect from db;
103  quit;
NOTE: The PROCEDURE SQL printed page 2.
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.81 seconds
      cpu time            0.03 seconds
      
104  
105  options sastrace=off;
106  
107  /******************************************************************************
108  Note that the code ran very fast, and that the generated SQL reported by
109  SASTRACE is exactly the same as the SQL we wrote in the parentheses.
110  ******************************************************************************/
111  
112  /******************************************************************************
113  Step 2 - Post-processing the DBMS result set in SAS
114  Post-traitement par SAS de l'ensemble des résultats retournés par le SGBD
115  ******************************************************************************/
116  proc format;
117  
117!  value $dayofweek
118  '1'='Sunday'
119  '2'='Monday'
120  '3'='Tuesday'
121  '4'='Wednesday'
122  '5'='Thursday'
123  '6'='Friday'
124  '7'='Saturday';
NOTE: Format $DAYOFWEEK is already on the library WORK.FORMATS.
NOTE: Format $DAYOFWEEK has been output.
125  run;
NOTE: PROCEDURE FORMAT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      
126  
127  proc sql;
128  title "2017 Sales by Day of the Week";
129  connect using db;
130  create table passth1 as
131  select weekday format=$dayofweek. 'Day of the Week'
132  ,spent format=dollar16.2 "Total Spent in US Dollars"
133  from connection to db
134  (select  to_char(order_date, 'D') Weekday
135  ,sum(Total_Sale) as Spent
136  from etdp.orders
137  where order_date between date'2017-01-01' and date'2017-12-30'
138  group by to_char(order_date, 'D')
139  order by to_char(order_date, 'D'))
140  ;
NOTE: Table WORK.PASSTH1 created, with 7 rows and 2 columns.
141  disconnect from db;
142  title;
143  quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.78 seconds
      cpu time            0.05 seconds
      
144  
145  /*************** plus de calcul coté SAS**********************/
146  proc sql;
147  title "2017 Sales by Day of the Week";
148  connect using db;
149  create table passth2 as
150  select weekday format=$dayofweek. 'Day of the Week'
151  ,spent format=dollar16.2 "Total Spent in US Dollars"
152  , 'ventes' as ventes
153  , spent/quantity format=dollar8.2
154  , age_moyen format=best5.2  "Age moyen"
155  from connection to db
156  (select  to_char(order_date, 'D') Weekday
157  ,sum(Total_Sale) as Spent
158  ,sum(quantity)   as quantity
159  ,avg(customer_age) as age_moyen
160  from etdp.orders
161  where order_date between date'2017-01-01' and date'2017-12-30'
162  group by to_char(order_date, 'D')
163  order by to_char(order_date, 'D'))
164  ;
NOTE: Table WORK.PASSTH2 created, with 7 rows and 5 columns.
165  disconnect from db;
166  title;
167  quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.87 seconds
      cpu time            0.03 seconds
      
168  
169  /********** SQL PASS THROUGH  EXECUTE ******/
170  options sastrace=',,,d' sastraceloc=saslog nostsuffix;
171  
172  proc sql;
173  connect using db;
174  execute
175  (create table etdp.result_yup3
176  as select  to_char(order_date, 'D') Weekday ,sum(Total_Sale) as Spent
177  from etdp.orders
178  where order_date between date'2017-01-01' and date'2017-12-30'
179  group by to_char(order_date, 'D')
180  order by to_char(order_date, 'D')) by db
181  ;
 
ORACLE_28: Executed: on connection 1
create table etdp.result_yup3 as select to_char(order_date, 'D') Weekday ,sum(Total_Sale) as Spent from etdp.orders where 
order_date between date'2017-01-01' and date'2017-12-30' group by to_char(order_date, 'D') order by to_char(order_date, 'D')
 
182  disconnect from db;
183  quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.88 seconds
      cpu time            0.04 seconds
      
184  
185  options sastrace=off;
186  
187  /* region: Generated postamble */
188  /* Close ODS destinations */
189  &graphterm; ;*';*";*/;run;quit;
190  quit;run;
191  ods html5 (id=web) close;
192  ods listing close;
193  %if %sysfunc(fileref(_gsfname)) lt 0 %then %do;
194      filename _gsfname clear;
NOTE: Fileref _GSFNAME has been deassigned.
195  %end;
196  %studio_capture_custom_output;
197  /* endregion */
198  
