1    /* region: Generated preamble */
2    /* Make sure the current directory is writable */
3    data _null_;
4        length rc 4;
5        %let tworkloc="%sysfunc(getoption(work))";
6        rc=dlgcdir(&tworkloc);
7    run;
NOTE: The current working directory is now 
      "/opt/sas/viya/config/var/tmp/compsrv/default/dc0baa93-8383-4c0c-900e-b05d12702e99/SAS_work1272000001DB_sas-compute-server-2a0
      8346d-f3b6-4a16-bfee-9589ad755ff4-102".
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
8    
9    /* Setup options */
10   title;
11   footnote;
12   options validvarname=any;
13   options validmemname=extend;
14   options dtreset date number;
15   options device=png;
16   
17   /* Setup macro variables */
18   %let syscc=0;
19   %let _clientapp = %nrquote(%nrstr(SAS Studio));
20   %let _clientappabbrev = %nrquote(%nrstr(Studio));
21   %let _clientappversion=2024.03;
22   %let _clientversion=;
23   %let _sasservername=&SYSHOSTNAME;
24   %let _sashostname=&SYSHOSTNAME;
25   %let _sasprogramfilehost=&SYSHOSTNAME;
26   %let _clientuserid = %nrquote(%nrstr(student));
27   %let _clientusername = %nrquote(%nrstr(Student));
28   %let clientmachine = %nrquote(%nrstr());
29   %let _clientmachine = %nrquote(%nrstr());
30   %let _clientmode = %nrquote(%nrstr(viya));
31   %let sasworklocation="%sysfunc(getoption(work))/";
32   filename _cwd &sasworklocation;
33   data _null_;
34       call symput('_sasworkingdir',pathname('_cwd'));
35   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
36   filename _cwd;
NOTE: Fileref _CWD has been deassigned.
37   %let _sasprogramfile = %nrquote(%nrstr(sascontent:/files/files/988fe41d-eefd-4ba0-8be9-e70fb4452c64));
38   %let _baseurl = %nrquote(%nrstr(https://server.demo.sas.com/SASStudio/));
39   %let _execenv = %nrquote(%nrstr(SASStudio));
40   %symdel _dataout_mime_type _dataout_name _dataout_url _dataout_table / nowarn;
41   %let _sasws_ = %bquote(%sysfunc(getoption(work)));
42   %let _saswstemp_ = %bquote(%sysfunc(getoption(work)));
43   
44   /* Detect SAS/Graph and setup graph options */
45   data _null_;
46       length rc $255;
47       call symput("graphinit","");
48       call symput("graphterm","");
49       rc=tslvl('sasxgopt','n');
50       _error_=0;
51       if (rc^=' ') then do;
52           call symput("graphinit","goptions reset=all gsfname=_gsfname;");
53           call symput("graphterm","goptions noaccessible;");
54       end;
55   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
56   data _null_;
57       length rc 4;
58       rc=sysprod("PRODNUM002");
59       if (rc^=1) then do;
60           call symput("graphinit","");
61           call symput("graphterm","");
62       end;
63   run;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      
64   
65   /* Setup ODS destinations */
66   ods _all_ close;
67   %studio_results_directory;
68   filename _htmlout "&_results_prefix_..html";
69   filename _listout "&_results_prefix_..lst";
70   filename _gsfname temp;
71   filename _dataout "&_results_prefix_..dat";
72   ods autonavigate off;
73   ods graphics on;
74   ods html5 (id=web) METATEXT='http-equiv="Content-Security-Policy" content="default-src ''none''; style-src ''unsafe-inline'';
74 ! img-src data: ;"' device=png gpath="&_saswstemp_" path="&_saswstemp_" encoding=utf8 file=_htmlout (title='Results:Exemple
74 ! Means.sas') style=Illuminate options(bitmap_mode='inline' outline='on' svg_mode='inline' css_prefix=".ods_&SYS_COMPUTE_JOB_ID"
74 ! body_id="div_&SYS_COMPUTE_JOB_ID" );
NOTE: Writing HTML5(WEB) Body file: _HTMLOUT
75   ods listing file=_listout;
76   &graphinit;
77   %studio_initialize_custom_output;
78   /* endregion */
79   
80   options sastrace=',,,d' sastraceloc=saslog nostsuffix;
 
ORACLE_36: Prepared: on connection 0
SELECT * FROM ETDP.ORDERS
 
81   proc means data=db.orders; var QUANTITY TOTAL_SALE ; run;
NOTE: SQL generation will be used to perform the initial summarization.
 
ORACLE_37: Prepared: on connection 0
SELECT * FROM ETDP.ORDERS
 
 
ORACLE_38: Prepared: on connection 0
 select COUNT(*) as ZSQL1, COUNT(*) as ZSQL2, COUNT(TXT_1."QUANTITY") as ZSQL3, MIN(TXT_1."QUANTITY") as ZSQL4, 
MAX(TXT_1."QUANTITY") as ZSQL5, SUM(TXT_1."QUANTITY") as ZSQL6, COALESCE(VAR_SAMP(TXT_1."QUANTITY")*(COUNT(TXT_1."QUANTITY")-1),0) 
as ZSQL7, COUNT(TXT_1."TOTAL_SALE") as ZSQL8, MIN(TXT_1."TOTAL_SALE") as ZSQL9, MAX(TXT_1."TOTAL_SALE") as ZSQL10, 
SUM(TXT_1."TOTAL_SALE") as ZSQL11, COALESCE(VAR_SAMP(TXT_1."TOTAL_SALE")*(COUNT(TXT_1."TOTAL_SALE")-1),0) as ZSQL12 from 
ETDP.ORDERS TXT_1 having COUNT(*) > 0
 
 
ORACLE_39: Executed: on connection 0
SELECT statement  ORACLE_38
 
ACCESS ENGINE:  SQL statement was passed to the DBMS for fetching data. 
NOTE: The PROCEDURE MEANS printed page 3.
NOTE: PROCEDURE MEANS used (Total process time):
      real time           3.27 seconds
      cpu time            0.20 seconds
      
82   
83   /* region: Generated postamble */
84   /* Close ODS destinations */
85   &graphterm; ;*';*";*/;run;quit;
86   quit;run;
87   ods html5 (id=web) close;
88   ods listing close;
89   %if %sysfunc(fileref(_gsfname)) lt 0 %then %do;
90       filename _gsfname clear;
NOTE: Fileref _GSFNAME has been deassigned.
91   %end;
92   %studio_capture_custom_output;
93   /* endregion */
94   
